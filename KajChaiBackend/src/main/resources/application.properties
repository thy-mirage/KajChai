spring.application.name=KajChai

# Server Configuration
server.port=${PORT:8080}
server.address=0.0.0.0

# Timezone Configuration
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Dhaka
spring.jackson.time-zone=Asia/Dhaka

# Production Profile Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE:development}

# PostgreSQL connection (Supabase) - Using .env variables
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Configuration (absolute minimum for Supabase free tier)
spring.datasource.hikari.maximum-pool-size=1
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.leak-detection-threshold=60000

# Hibernate / JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# SQL Initialization - only for first time setup
spring.sql.init.mode=never

# Amazon AWS Bucket - Using .env variables
aws.access.key=${AWS_ACCESS_KEY}
aws.secret.key=${AWS_SECRET_KEY}
aws.region=${AWS_REGION}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME}
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT Configuration - Using .env variables with fallback defaults
jwt.secret=${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890}
jwt.expiration=${JWT_EXPIRATION:3600000}

# Email Configuration - Using .env variables
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Verification Configuration
app.verification.code.expiry=300000

# Cloudinary credentials - Using .env variables
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# Groq LLM API Configuration - Using .env variables
groq.api.key=${GROQ_API_KEY}
groq.api.url=${GROQ_API_URL}
groq.model=${GROQ_MODEL}

# CORS Configuration
app.cors.allowed-origins=http://localhost:5173,http://localhost:5174,https://kaj-chai.vercel.app,https://*.vercel.app,https://*.onrender.com,https://*.railway.app
